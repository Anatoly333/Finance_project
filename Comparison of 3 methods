from sklearn.neighbors import KNeighborsRegressor
import pandas
import numpy as np
import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import NearestNeighbors
from sklearn.model_selection import KFold
from sklearn import datasets, linear_model
from sklearn.model_selection import cross_val_score
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import scale
from sklearn.ensemble import RandomForestRegressor
import yfinance as yf
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import log_loss
from sklearn.metrics import r2_score
from sklearn.metrics import mean_squared_error
from sklearn.linear_model import LogisticRegression
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import PassiveAggressiveRegressor
 

msft = yf.Ticker("MSFT")
print(msft)
data = yf.download("AAPL", start="2000-08-01", end="2017-09-01")
data_test = yf.download("AAPL", start="2018-08-01", end="2019-09-01")
print (data)
X = data[['Open', 'High', 'Low']]
y = data['Close']

X_test = data_test[['Open', 'High', 'Low']]
y_test = data_test['Close']

i = 0
kf = KFold(n_splits=5, random_state=1, shuffle=True)
a = []
for i in range(1,10):
	clf = RandomForestRegressor(n_estimators=i, random_state=1)
	clf.fit(X,y)
	kv = cross_val_score(estimator = clf, X=X, y=y, cv=kf, scoring='r2')
	a.append(kv.mean())
print(a)


rfc=RandomForestRegressor(n_estimators=10, random_state=241)
rfc.fit(X,y)
pred = rfc.predict(X_test)
print (mean_squared_error(y_test, pred))

knn=KNeighborsRegressor(n_neighbors=5)
knn.fit(X,y)
pred2 = knn.predict(X_test)
print (mean_squared_error(y_test, pred2))

PAR=PassiveAggressiveRegressor(max_iter=100, random_state=241)
PAR.fit(X,y)
pred3 = PAR.predict(X_test)
print (mean_squared_error(y_test, pred3))

lr=LogisticRegression(random_state=241)
lr.fit(X,y)
pred4 = lr.predict(X_test)
print (mean_squared_error(y_test, pred4))


